From f93cffede134c64750d92ea87805ffa6526059c0 Mon Sep 17 00:00:00 2001
From: flk <f_l_k@t-online.de>
Date: Sat, 30 Apr 2016 16:24:49 +0200
Subject: [PATCH] build_fix

Signed-off-by: flk <f_l_k@t-online.de>
---

diff --git a/src/basic/parse-util.c b/src/basic/parse-util.c
index a3cb81b..fca743d 100644
--- a/src/basic/parse-util.c
+++ b/src/basic/parse-util.c
@@ -23,7 +23,6 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <xlocale.h>
 
 #include "alloc-util.h"
 #include "extract-word.h"
@@ -469,7 +468,7 @@ int safe_atoi16(const char *s, int16_t *ret) {
         return 0;
 }
 
-int safe_atod(const char *s, double *ret_d) {
+/*int safe_atod(const char *s, double *ret_d) {
         char *x = NULL;
         double d = 0;
         locale_t loc;
@@ -495,7 +494,7 @@ int safe_atod(const char *s, double *ret_d) {
         freelocale(loc);
         *ret_d = (double) d;
         return 0;
-}
+}*/
 
 int parse_fractional_part_u(const char **p, size_t digits, unsigned *res) {
         size_t i;
diff --git a/src/shared/conf-parser.c b/src/shared/conf-parser.c
index e7fe9ac..e9dcd0e 100644
--- a/src/shared/conf-parser.c
+++ b/src/shared/conf-parser.c
@@ -458,7 +458,7 @@ DEFINE_PARSER(long, long, safe_atoli);
 DEFINE_PARSER(uint32, uint32_t, safe_atou32);
 DEFINE_PARSER(uint64, uint64_t, safe_atou64);
 DEFINE_PARSER(unsigned, unsigned, safe_atou);
-DEFINE_PARSER(double, double, safe_atod);
+//DEFINE_PARSER(double, double, safe_atod);
 DEFINE_PARSER(nsec, nsec_t, parse_nsec);
 DEFINE_PARSER(sec, usec_t, parse_sec);
 DEFINE_PARSER(mode, mode_t, parse_mode);
diff --git a/src/libsystemd/sd-bus/busctl.c b/src/libsystemd/sd-bus/busctl.c
index 772ab62..c9839ad 100644
--- a/src/libsystemd/sd-bus/busctl.c
+++ b/src/libsystemd/sd-bus/busctl.c
@@ -1375,7 +1375,7 @@ static int message_append_cmdline(sd_bus_message *m, const char *signature, char
                 case SD_BUS_TYPE_DOUBLE: {
                         double z;
 
-                        r = safe_atod(v, &z);
+//                        r = safe_atod(v, &z);
                         if (r < 0) {
                                 log_error("Failed to parse as double precision floating point: %s", v);
                                 return r;
diff --git a/src/test/test-parse-util.c b/src/test/test-parse-util.c
index 7d8677e..fe39fc3 100644
--- a/src/test/test-parse-util.c
+++ b/src/test/test-parse-util.c
@@ -432,14 +432,14 @@ static void test_safe_atod(void) {
         double d;
         char *e;
 
-        r = safe_atod("junk", &d);
+//        r = safe_atod("junk", &d);
         assert_se(r == -EINVAL);
 
-        r = safe_atod("0.2244", &d);
+//        r = safe_atod("0.2244", &d);
         assert_se(r == 0);
         assert_se(fabs(d - 0.2244) < 0.000001);
 
-        r = safe_atod("0,5", &d);
+//        r = safe_atod("0,5", &d);
         assert_se(r == -EINVAL);
 
         errno = 0;
@@ -449,11 +449,11 @@ static void test_safe_atod(void) {
         /* Check if this really is locale independent */
         if (setlocale(LC_NUMERIC, "de_DE.utf8")) {
 
-                r = safe_atod("0.2244", &d);
+//                r = safe_atod("0.2244", &d);
                 assert_se(r == 0);
                 assert_se(fabs(d - 0.2244) < 0.000001);
 
-                r = safe_atod("0,5", &d);
+//                r = safe_atod("0,5", &d);
                 assert_se(r == -EINVAL);
 
                 errno = 0;
@@ -463,11 +463,11 @@ static void test_safe_atod(void) {
         /* And check again, reset */
         assert_se(setlocale(LC_NUMERIC, "C"));
 
-        r = safe_atod("0.2244", &d);
+//        r = safe_atod("0.2244", &d);
         assert_se(r == 0);
         assert_se(fabs(d - 0.2244) < 0.000001);
 
-        r = safe_atod("0,5", &d);
+//        r = safe_atod("0,5", &d);
         assert_se(r == -EINVAL);
 
         errno = 0;
--
2.1.4


